{"version":3,"sources":["Components/NewMatrix.jsx","Components/RequirementsForm.jsx","Components/AHPComponent.jsx","Components/Matrix.jsx","Components/MyHeader.jsx","Components/RequirementsModal.jsx","App.js","serviceWorker.js","index.js"],"names":["id","requirements","RequirementsForm","props","remove","k","form","keys","getFieldValue","setFieldsValue","filter","key","setRequirementCount","add","nextKeys","concat","handleSubmit","e","preventDefault","validateFields","err","values","names","console","log","map","this","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","initialValue","formItems","index","Item","label","required","validateTrigger","rules","whitespace","message","placeholder","onChange","setForm","style","width","marginRight","className","type","onClick","marginLeft","React","Component","Content","Layout","Header","AHPComponent","Footer","Typography","Title","state","ahpVal","step1Columns","step1Data","step2Columns","step2Data","step3Data","ahp","setColumns","requirementsArr","length","setData","updateAhp","setState","title","dataIndex","align","step2Arr","newData","data3","i","current","row_header","getFixedValue","current3","push","newColumns","cell","setStep2Columns","sum","j","parseFloat","getValue","temp","setStep2_3Data","value","toString","slice","padding","offset","columns","dataSource","bordered","pagination","Option","Select","matrixOptions","recMatrixOptions","Matrix","data","handleMatrixInput","row_no","col_no","setReci","newMatrixData","matrixData","getCalculatedValue","setMatrixData","updateRequirements","myInput","item","parseInt","fixed","name","age","address","TabPane","Tabs","WrappedForm","Form","create","RequirementsModal","x","visible","handleCancel","handleOk","activeTab","okText","setAhp","onOk","onCancel","activeKey","tab","MyHeader","showModal","setRequirement","handleDone","f","size","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2957cab3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Table } from 'antd';\r\n\r\nconst data = [];\r\n\r\nconst columns = [\r\n    {\r\n      title: '',\r\n      width: 100,\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      fixed: 'left',\r\n    },\r\n    {\r\n      title: 'R1',\r\n      width: 100,\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n    \r\n    },\r\n    {\r\n      title: 'R2',\r\n      dataIndex: 'address',\r\n      key: '1',\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'R3',\r\n      dataIndex: 'address',\r\n      key: '2',\r\n      width: 150,\r\n    },\r\n    {\r\n      title: 'R4',\r\n      dataIndex: 'address',\r\n      key: '3',\r\n      width: 150,\r\n    }\r\n\r\n\r\n]\r\n\r\n    \r\nfor (let i = 0; i < 100; i++) {\r\n    data.push({\r\n      key: i,\r\n      name: `R${i}`,\r\n      age: 32,\r\n      address: `${i}`,\r\n    });\r\n}\r\n\r\nexport default class NewMatrix extends Component {\r\n    render() {\r\n        return (\r\n            <Table \r\n                    columns={columns} \r\n                    dataSource={data} \r\n                    scroll={{ x: 1500, y: 300 }} \r\n            />\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./RequirementsForm.css\";\r\nimport { Form, Input, Icon, Button } from \"antd\";\r\n\r\nlet id = 0;\r\nlet requirements = 0;\r\n\r\nexport default class RequirementsForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  remove = k => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    // We need at least one passenger\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k)\r\n    });\r\n    requirements--;\r\n    this.props.setRequirementCount(requirements);\r\n  };\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    const nextKeys = keys.concat(id++);\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n    form.setFieldsValue({\r\n      keys: nextKeys\r\n    });\r\n    requirements++;\r\n    this.props.setRequirementCount(requirements);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const { keys, names } = values;\r\n        console.log(\"Received values of form: \", values);\r\n        console.log(\r\n          \"Merged values:\",\r\n          keys.map(key => names[key])\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 }\r\n      }\r\n    };\r\n\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    const formItems = keys.map((k, index) => (\r\n      <Form.Item\r\n        {...formItemLayout}\r\n        label={index === 0 ? \"\" : \"\"}\r\n        required={false}\r\n        key={k}\r\n      >\r\n        {getFieldDecorator(`names[${k}]`, {\r\n          validateTrigger: [\"onChange\", \"onBlur\"],\r\n          rules: [\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please insert a requirement or delete this field.\"\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            placeholder=\"Requirements\"\r\n            onChange={this.props.setForm(this.props.form)}\r\n            style={{ width: \"90%\", marginRight: 8 }}\r\n          />\r\n        )}\r\n        <Icon\r\n          className=\"dynamic-delete-button\"\r\n          type=\"minus-circle-o\"\r\n          onClick={() => this.remove(k)}\r\n        />\r\n      </Form.Item>\r\n    ));\r\n    return (\r\n      <Form>\r\n        {formItems}\r\n        <Form.Item {...formItemLayout}>\r\n          <Button\r\n            type=\"dashed\"\r\n            onClick={this.add}\r\n            style={{ width: \"60%\", marginLeft: \"20%\" }}\r\n          >\r\n            <Icon type=\"plus\" /> Add field\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item {...formItemLayout}></Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Table, Row, Col, Typography } from \"antd\";\r\nimport \"./AHPComponent.css\";\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst { Title } = Typography;\r\nexport default class AHPComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    ahpVal: [],\r\n    step1Columns: [],\r\n    step1Data: [],\r\n    step2Columns: [],\r\n    step2Data: [],\r\n    step3Data: [],\r\n    ahp: this.props.ahp\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setColumns(this.props.requirementsArr.length);\r\n    this.setData(this.props.requirementsArr.length);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.ahp != this.props.ahp) {\r\n      this.updateAhp(this.props.ahp);\r\n      this.setColumns(this.props.requirementsArr.length);\r\n      this.setData(this.props.requirementsArr.length);\r\n    }\r\n  }\r\n\r\n  updateAhp(ahp) {\r\n    this.setState({ ahp });\r\n  }\r\n\r\n  setStep2Columns() {\r\n    let newColumns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"row_header\",\r\n        className: \"row_header\",\r\n        align: \"center\"\r\n      }\r\n    ];\r\n\r\n    this.setState({\r\n      step2Columns: newColumns\r\n    });\r\n  }\r\n\r\n  setStep2_3Data(step2Arr) {\r\n    let newData = [];\r\n    let data3 = [];\r\n\r\n    for (let i = 0; i < step2Arr.length; i++) {\r\n      let current = {\r\n        key: i,\r\n        row_header: this.getFixedValue(step2Arr[i])\r\n      };\r\n\r\n      let current3 = {\r\n        key: i,\r\n        row_header: this.getFixedValue(\r\n          step2Arr[i] / this.props.requirementsArr.length\r\n        )\r\n      };\r\n\r\n      newData.push(current);\r\n      data3.push(current3);\r\n    }\r\n\r\n    this.setState({\r\n      step2Data: newData,\r\n      step3Data: data3\r\n    });\r\n  }\r\n\r\n  setColumns(requirements) {\r\n    let newColumns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"row_header\",\r\n        className: \"row_header\",\r\n        align: \"center\"\r\n      }\r\n    ];\r\n\r\n    for (let i = 1; i <= requirements; i++) {\r\n      let cell = {\r\n        title: \"R\" + i,\r\n        dataIndex: \"R\" + i,\r\n        align: \"center\"\r\n      };\r\n\r\n      if (i === 1) {\r\n        cell[\"className\"] = \"w125\";\r\n      }\r\n      newColumns.push(cell);\r\n    }\r\n    this.setState({\r\n      step1Columns: newColumns\r\n    });\r\n\r\n    this.setStep2Columns();\r\n  }\r\n\r\n  setData(requirements) {\r\n    let newData = [];\r\n    let sum = [];\r\n\r\n    for (let i = 1; i <= requirements; i++) {\r\n      for (let j = 1; j <= requirements; j++) {\r\n        if (i == 1) {\r\n          sum[j] = parseFloat(this.getValue(i, j));\r\n        } else {\r\n          sum[j] += parseFloat(this.getValue(i, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    let step2Arr = [];\r\n    for (let i = 1; i <= requirements; i++) {\r\n      let current = {\r\n        key: i,\r\n        row_header: \"R\" + i\r\n      };\r\n\r\n      let temp = 0;\r\n      for (let j = 1; j <= requirements; j++) {\r\n        current[\"R\" + j] = this.getFixedValue(this.getValue(i, j) / sum[j]);\r\n        temp += parseFloat(current[\"R\" + j]);\r\n      }\r\n      step2Arr[i - 1] = temp;\r\n      newData.push(current);\r\n    }\r\n\r\n    this.setState({\r\n      step1Data: newData\r\n    });\r\n    this.setStep2_3Data(step2Arr);\r\n  }\r\n\r\n  getValue(i, j) {\r\n    if (i == j) {\r\n      return 1;\r\n    } else if (this.props.ahp[i] != null) {\r\n      return this.props.ahp[i][j];\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  getFixedValue(value) {\r\n    if (value.toString().length > 1) {\r\n      return value.toString().slice(0, 5);\r\n    } else {\r\n      return value.toString();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { ahp } = this.props;\r\n    return (\r\n      <Content id=\"body\" style={{ padding: \"50px 50px\" }}>\r\n        <Row className=\"m25\">\r\n          <Col span={12} offset={6}>\r\n            <Table\r\n              columns={this.state.step1Columns}\r\n              dataSource={this.state.step1Data}\r\n              bordered\r\n              pagination={false}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"m25\">\r\n          <Col span={12} offset={6}>\r\n            <Table\r\n              columns={this.state.step2Columns}\r\n              dataSource={this.state.step2Data}\r\n              bordered\r\n              pagination={false}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"m25\">\r\n          <Col span={12} offset={6}>\r\n            <Table\r\n              columns={this.state.step2Columns}\r\n              dataSource={this.state.step3Data}\r\n              bordered\r\n              pagination={false}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Select } from \"antd\";\r\nimport { AHPComponent } from \"./AHPComponent\";\r\nimport { deepEqual } from \"assert\";\r\nimport { throwStatement } from \"@babel/types\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst matrixOptions = [\r\n  \"1\",\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n  \"6\",\r\n  \"7\",\r\n  \"8\",\r\n  \"9\",\r\n  \"1/2\",\r\n  \"1/3\",\r\n  \"1/4\",\r\n  \"1/5\",\r\n  \"1/6\",\r\n  \"1/7\",\r\n  \"1/8\",\r\n  \"1/9\"\r\n];\r\n\r\nconst recMatrixOptions = [\r\n  \"1\",\r\n  \"1/2\",\r\n  \"1/3\",\r\n  \"1/4\",\r\n  \"1/5\",\r\n  \"1/6\",\r\n  \"1/7\",\r\n  \"1/8\",\r\n  \"1/9\",\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n  \"6\",\r\n  \"7\",\r\n  \"8\",\r\n  \"9\"\r\n];\r\n\r\nexport default class Matrix extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    columns: [],\r\n    data: [],\r\n    requirements: this.props.requirements\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setColumns(this.props.requirements);\r\n    this.setData(this.props.requirements);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.requirements != this.props.requirements) {\r\n      this.updateRequirements(this.props.requirements);\r\n      this.setColumns(this.props.requirements);\r\n      this.setData(this.props.requirements);\r\n    }\r\n  }\r\n\r\n  updateRequirements(requirements) {\r\n    this.setState({ requirements });\r\n  }\r\n\r\n  setColumns(requirements) {\r\n    let newColumns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"row_header\",\r\n        className: \"row_header\",\r\n        align: \"center\"\r\n      }\r\n    ];\r\n    let newMatrixData = this.props.matrixData;\r\n    for (let i = 1; i <= requirements; i++) {\r\n      if (newMatrixData[i] == null) {\r\n        newMatrixData[i] = [];\r\n      }\r\n\r\n      let cell = {\r\n        title: \"R\" + i,\r\n        dataIndex: \"R\" + i,\r\n        align: \"center\"\r\n      };\r\n\r\n      if (i === 1) {\r\n        cell[\"className\"] = \"w125\";\r\n      }\r\n      newColumns.push(cell);\r\n    }\r\n\r\n    this.props.setMatrixData(newMatrixData);\r\n\r\n    this.setState({\r\n      columns: newColumns\r\n    });\r\n  }\r\n\r\n  setData(requirements) {\r\n    let newData = [];\r\n\r\n    for (let i = 1; i <= requirements; i++) {\r\n      let current = {\r\n        key: i,\r\n        row_header: \"R\" + i\r\n      };\r\n\r\n      current[\"R\" + i] = 1;\r\n\r\n      for (let j = i + 1; j <= requirements; j++) {\r\n        current[\"R\" + j] = this.myInput(i, j);\r\n      }\r\n\r\n      newData.push(current);\r\n    }\r\n\r\n    this.setState({\r\n      data: newData\r\n    });\r\n  }\r\n\r\n  myInput(row_no, col_no) {\r\n    return (\r\n      <Select\r\n        style={{ width: 65 }}\r\n        onChange={value => this.handleMatrixInput(value, row_no, col_no)}\r\n      >\r\n        {matrixOptions.map((item, index) => (\r\n          <Option key={index} value={index}>\r\n            {item}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  handleMatrixInput = (index, row_no, col_no) => {\r\n    this.setReci(index, row_no, col_no);\r\n    let newMatrixData = this.props.matrixData;\r\n\r\n    newMatrixData[row_no][col_no] = this.getCalculatedValue(\r\n      matrixOptions[index]\r\n    );\r\n    newMatrixData[col_no][row_no] = this.getCalculatedValue(\r\n      recMatrixOptions[index]\r\n    );\r\n\r\n    // let val = [\r\n    //   [1, 4, 6, 0.8],\r\n    //   [4, 1, 2, 0.89],\r\n    //   [3, 5, 1, 9],\r\n    //   [1, 0.5, 0.123, 1]\r\n    // ];\r\n    // newMatrixData.push([val]);\r\n    this.props.setMatrixData(newMatrixData);\r\n  };\r\n\r\n  getCalculatedValue(value) {\r\n    if (value.length > 1) {\r\n      return value.slice(0, 1) / value.slice(2, 3);\r\n    } else {\r\n      return parseInt(value);\r\n    }\r\n  }\r\n\r\n  setReci = (value, row_no, col_no) => {\r\n    let newData = this.state.data;\r\n\r\n    //console.log(value + \" | \" + row_no + \" | \" + col_no);\r\n    newData[col_no - 1][\"R\" + row_no] = recMatrixOptions[value];\r\n\r\n    // console.log(newData[1][\"R2\"] + newData[1][\"R3\"]);\r\n\r\n    this.setState({\r\n      data: newData\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        columns={this.state.columns}\r\n        dataSource={this.state.data}\r\n        bordered\r\n        pagination={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./MyHeader.css\";\r\nimport { Layout, Row, Col, Button } from \"antd\";\r\nimport RequirementsModal from \"./RequirementsModal\";\r\n\r\nconst { Header } = Layout;\r\n\r\nlet form;\r\nexport default class MyHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    visible: false,\r\n    activeTab: 1,\r\n    okText: \"Next\",\r\n    matrixData: []\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    if (this.state.activeTab == 1) {\r\n      form.validateFields((err, values) => {\r\n        if (!err) {\r\n          const { keys, names } = values;\r\n          this.props.setRequirement(names);\r\n\r\n          this.setState({\r\n            activeTab: 2,\r\n            okText: \"Done\"\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.handleDone();\r\n    }\r\n  };\r\n\r\n  setForm(f) {\r\n    form = f;\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.handleDone();\r\n  };\r\n\r\n  handleDone() {\r\n    this.setState(\r\n      {\r\n        visible: false\r\n      },\r\n      () => {\r\n        this.setState({\r\n          activeTab: 1,\r\n          okText: \"Next\"\r\n        });\r\n      }\r\n    );\r\n    this.props.setAhp(this.state.matrixData);\r\n  }\r\n\r\n  setMatrixData = matrixData => {\r\n    this.setState({ matrixData });\r\n  };\r\n\r\n  render() {\r\n    const { visible, activeTab, okText } = this.state;\r\n    return (\r\n      <Header>\r\n        <Row>\r\n          <Col span={8}>\r\n            <h1>AHP Calculator</h1>\r\n          </Col>\r\n\r\n          <Col span={4} offset={12}>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              className=\"headerbtn\"\r\n              onClick={this.showModal}\r\n            >\r\n              Add / Remove Requirements\r\n            </Button>\r\n            <RequirementsModal\r\n              visible={visible}\r\n              handleCancel={this.handleCancel}\r\n              handleOk={this.handleOk}\r\n              activeTab={activeTab}\r\n              okText={okText}\r\n              requirements={this.props.requirementsArr}\r\n              setMatrixData={this.setMatrixData}\r\n              matrixData={this.state.matrixData}\r\n              setForm={this.setForm}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Tabs, Form } from \"antd\";\r\nimport RequirementsForm from \"./RequirementsForm\";\r\nimport Matrix from \"./Matrix\";\r\nimport NewMatrix from \"./NewMatrix\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst WrappedForm = Form.create({ name: \"dynamic_form_item\" })(\r\n  RequirementsForm\r\n);\r\n\r\nexport default class RequirementsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    requirements: 0\r\n  };\r\n\r\n  setRequirementCount = x => {\r\n    this.setState({\r\n      requirements: x\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      handleCancel,\r\n      handleOk,\r\n      activeTab,\r\n      okText,\r\n      setAhp\r\n    } = this.props;\r\n    const { requirements } = this.state;\r\n    return (\r\n      <Modal\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okText={okText}\r\n      >\r\n        <Tabs activeKey={activeTab.toString()}>\r\n          <TabPane tab=\"Requirements\" key=\"1\">\r\n            <WrappedForm\r\n              setRequirementCount={this.setRequirementCount}\r\n              requirementsArr={this.props.requirementsArr}\r\n              setForm={this.props.setForm}\r\n            />\r\n          </TabPane>\r\n          <TabPane tab=\"Relative Intensity\" key=\"2\">\r\n            <Matrix\r\n              requirements={this.state.requirements}\r\n              setMatrixData={this.props.setMatrixData}\r\n              matrixData={this.props.matrixData}\r\n            />\r\n          </TabPane>\r\n        </Tabs>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MyHeader from \"./Components/MyHeader\";\r\nimport AHPComponent from \"./Components/AHPComponent\";\r\nimport \"./App.css\";\r\nimport { Layout } from \"antd\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    requirementsArr: [],\r\n    ahp: []\r\n  };\r\n\r\n  setRequirement = x => {\r\n    this.setState({\r\n      requirementsArr: x\r\n    });\r\n  };\r\n\r\n  setAhp = x => {\r\n    this.setState({\r\n      ahp: x\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <MyHeader setAhp={this.setAhp} setRequirement={this.setRequirement} />\r\n        <AHPComponent\r\n          ahp={this.state.ahp}\r\n          requirementsArr={this.state.requirementsArr}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}